name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust-toolchain: 
          - stable
          # -beta
          - nightly
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust-toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          override: true
      - name: Install postgres (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          choco install postgresql12 --force --params '/Password:root'
          echo "C:\Program Files\PostgreSQL\12\bin" >> $GITHUB_PATH
          echo "C:\Program Files\PostgreSQL\12\lib" >> $GITHUB_PATH
          echo "PQ_LIB_DIR=C:\Program Files\PostgreSQL\12\lib" >> $GITHUB_ENV
          echo "PG_DATABASE_URL=postgres://postgres:root@localhost/" >> $GITHUB_ENV
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-${{ matrix.rust-toolchain }}-${{ hashFiles('**/Cargo.lock') }}-build-v1
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

  container:
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/github-script@v4.1
        id: author-date
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
            return commit_details.data.author.date
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build
        uses: docker/build-push-action@v4
        with:
          file: order-watcher/Dockerfile
          build-args: |
            COMMIT_SHA="${{ github.sha }}"
            COMMIT_DATE=${{ steps.author-date.outputs.result }}"
